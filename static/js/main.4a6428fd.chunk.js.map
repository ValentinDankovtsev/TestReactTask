{"version":3,"sources":["components/Tasks/tasks.module.css","components/AddTask/addTask.module.css","redux/addTasksReducer.js","components/services/logIn.js","redux/loginReducer.js","redux/store.js","components/Autorization/Autorization.js","components/Autorization/AutorizationContainer.js","components/AddTask/AddTask.jsx","components/AddTask/AddTaskConatiner.js","components/AddTask/Task.jsx","components/Tasks/Tasks.jsx","components/Tasks/TasksContainer.jsx","App.js","index.js"],"names":["module","exports","ADD_TASK_TYPE","UPDATE_TASK_TYPE","UPDATE_DESCRIPTION_TYPE","UPDATE_DATE_TYPE","initialState","tasks","newTaskText","newDescriptionText","newDate","addTaskReducer","state","action","type","id","uuidv4","task","description","date","value","logIn","userName","password","ADD_USER_TYPE","UPDATE_USERNAME_TYPE","UPDATE_USERPASSWORD_TYPE","SIGN_OUT","loginReducer","newUserName","newPassword","isAuth","result","reducers","combineReducers","tasksPage","loginPage","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","console","log","getState","persistor","persistStore","Autorization","props","to","name","labelCol","span","wrapperCol","initialValues","remember","autoComplete","onSubmit","event","preventDefault","Item","label","rules","required","message","onChange","e","text","target","updateUserName","updatePassword","offset","onClick","addLogin","LoginContainer","connect","currentUser","newUser","dispatch","updateUserNameActionCreator","addUserPasswordActionCreator","AddTask","className","s","pageAddTaskHeader","title","onBack","history","back","updateNewTask","updateDescription","data","datestring","updateData","htmlType","addTask","AddTaskContainer","updateTaskActionCreator","updateDescriptionActionCreator","updateDataActionCreator","Task","columns","dataIndex","render","dataSource","Tasks","tasksElement","map","el","indx","sitePageHeader","buttonSingOut","signOut","TasksContainer","App","exact","path","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4a6428fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sitePageHeader\":\"tasks_sitePageHeader__3DP3i\",\"buttonSingOut\":\"tasks_buttonSingOut__2Vl_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageAddTaskHeader\":\"addTask_pageAddTaskHeader__3TjxY\"};","import { v4 as uuidv4 } from 'uuid';\r\nconst ADD_TASK_TYPE = \"ADD_TASK_TYPE\";\r\nconst UPDATE_TASK_TYPE = \"UPDATE_TASK_TYPE\";\r\nconst UPDATE_DESCRIPTION_TYPE = \"UPDATE_DESCRIPTION_TYPE\";\r\nconst UPDATE_DATE_TYPE = \"UPDATE_DATA_TYPE\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  newTaskText: \"Задача\",\r\n  newDescriptionText: \"Описание\",\r\n  newDate: \"Дата\",\r\n};\r\n\r\nexport const updateTaskActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_TASK_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const addTaskActionCreator = () => {\r\n  return {\r\n    type: ADD_TASK_TYPE,\r\n  };\r\n};\r\n\r\nexport const updateDescriptionActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_DESCRIPTION_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const updateDataActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_DATE_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nconst addTaskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK_TYPE:\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          ...state.tasks,\r\n          {\r\n            id: uuidv4 (),\r\n            task: state.newTaskText,\r\n            description: state.newDescriptionText,\r\n            date: state.newDate,\r\n          },\r\n        ],\r\n        newTaskText: \"\",\r\n        newDescriptionText: \"\",\r\n        newDate: \"\",\r\n      };\r\n\r\n    case UPDATE_TASK_TYPE:\r\n      return {\r\n        ...state,\r\n        newTaskText: action.value,\r\n      };\r\n    case UPDATE_DESCRIPTION_TYPE:\r\n      return {\r\n        ...state,\r\n        newDescriptionText: action.value,\r\n      };\r\n    case UPDATE_DATE_TYPE:\r\n      return {\r\n        ...state,\r\n        newDate: action.value,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addTaskReducer;\r\n","export const logIn = (userName, password) => {\r\n  if (userName === \"Admin\" && password === \"qwerty\") {\r\n    return \"successfully\";\r\n  }\r\n};\r\n","import { logIn } from \"../components/services/logIn\";\r\nconst ADD_USER_TYPE = \"ADD_USER_TYPE\";\r\nconst UPDATE_USERNAME_TYPE = \"UPDATE_USERNAME_TYPE\";\r\nconst UPDATE_USERPASSWORD_TYPE = \"UPDATE_USERPASSWORD_TYPE\";\r\nconst SIGN_OUT = \"SIGN_OUT\";\r\nexport const addUserActionCreator = () => {\r\n  return {\r\n    type: ADD_USER_TYPE,\r\n  };\r\n};\r\n\r\nexport const addSignOutActionCreator = () => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const addUserPasswordActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_USERPASSWORD_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const updateUserNameActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_USERNAME_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_USERNAME_TYPE:\r\n      return {\r\n        ...state,\r\n        newUserName: action.value,\r\n      };\r\n    case UPDATE_USERPASSWORD_TYPE:\r\n      return {\r\n        ...state,\r\n        newPassword: action.value,\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        userName: \"\",\r\n        password: \"\",\r\n        newPassword: \"\",\r\n        newUserName: \"\",\r\n      };\r\n\r\n    case ADD_USER_TYPE:\r\n      const result = logIn(state.newUserName, state.newPassword);\r\n      if (result === \"successfully\") {\r\n        return {\r\n          ...state,\r\n          userName: state.newUserName,\r\n          isAuth: true,\r\n          newPassword: \"\",\r\n          newUserName: \"\",\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          isAuth: false,\r\n          userName: \"\",\r\n          newPassword: \"\",\r\n          newUserName: \"\",\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport addTaskReducer from \"./addTasksReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport loginReducer from \"./loginReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  tasksPage: addTaskReducer,\r\n  loginPage: loginReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport let store = createStore(persistedReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nconsole.log(store.getState());\r\n\r\nexport let persistor = persistStore(store);\r\n\r\n// let state = {\r\n//   users: [\r\n//     {\r\n//       Admin: {\r\n//         tasks: [{ task: \"name\", description: \"description\", date: \"date\" }],\r\n//       },\r\n//     },\r\n//     {\r\n//       User2: {\r\n//         tasks: [{ task: \"name\", description: \"description\", date: \"date\" }],\r\n//       },\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// let state2 = {\r\n//   users: {\r\n//     admin: {\r\n//       tasks:[{ task: \"name\", description: \"description\", date: \"date\" }],\r\n//     },\r\n//     ser2: {\r\n//       tasks:[{ task: \"name\", description: \"description\", date: \"date\" }],\r\n//     },\r\n//   },\r\n//   isAuth:false\r\n// };\r\n\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst Autorization = (props) => {\r\n  const changeUserNameValue = (e) => {\r\n    const text = e.target.value;\r\n    props.updateUserName(text);\r\n  };\r\n\r\n  const changeUserPasswordValue = (e) => {\r\n    const text = e.target.value;\r\n    props.updatePassword(text);\r\n  };\r\n  const addUserNameAndPassword = () => {\r\n    props.addLogin();\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to={\"/tasks\"} />;\r\n  console.log(props.isAuth);\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 6,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={props.userName} onChange={changeUserNameValue} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={props.password} onChange={changeUserPasswordValue} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Link to={\"/tasks\"}>\r\n            <Button type=\"primary\" onClick={addUserNameAndPassword}>\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autorization;\r\n","import {\r\n  updateUserNameActionCreator,\r\n  addUserActionCreator,\r\n  addUserPasswordActionCreator,\r\n} from \"../../redux/loginReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Autorization from \"./Autorization\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.newUserName,\r\n    isAuth: state.loginPage.isAuth,\r\n    password: state.newPassword,\r\n    currentUser: state.newUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserName: (text) => {\r\n      dispatch(updateUserNameActionCreator(text));\r\n    },\r\n\r\n    addLogin: () => {\r\n      dispatch(addUserActionCreator());\r\n    },\r\n    updatePassword: (text) => {\r\n      dispatch(addUserPasswordActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nlet LoginContainer = connect(mapStateToProps, mapDispatchToProps)(Autorization);\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { PageHeader, Form, Input, Button, DatePicker } from \"antd\";\r\nimport s from \"./addTask.module.css\";\r\n\r\nconst AddTask = (props) => {\r\n  const inTask = () => {\r\n    props.addTask();\r\n  };\r\n\r\n  const changeTask = (e) => {\r\n    const text = e.target.value;\r\n    props.updateNewTask(text);\r\n  };\r\n\r\n  const changeDescription = (e) => {\r\n    const text = e.target.value;\r\n    props.updateDescription(text);\r\n  };\r\n\r\n  const changeData = (data, datestring) => {\r\n    props.updateData(datestring);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div>\r\n      <div className={s.pageAddTaskHeader}>\r\n        <PageHeader\r\n          title=\"Add Task\"\r\n          onBack={() => window.history.back()}\r\n        ></PageHeader>\r\n      </div>\r\n\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 6,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Task\"\r\n          name=\"task\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your nameTask!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            value={props.newTaskText}\r\n            required\r\n            onChange={changeTask}\r\n          ></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your description!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            value={props.newDescriptionText}\r\n            onChange={changeDescription}\r\n          ></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Date\"\r\n          name=\"date\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your date!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker value={props.newDate} onChange={changeData}></DatePicker>\r\n        </Form.Item>\r\n\r\n        <div>\r\n          <Link to=\"/tasks\">\r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 10,\r\n                span: 10,\r\n              }}\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={inTask}>\r\n                Add\r\n              </Button>\r\n            </Form.Item>\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { connect } from \"react-redux\";\r\nimport AddTask from \"./AddTask\";\r\nimport {\r\n  updateTaskActionCreator,\r\n  addTaskActionCreator,\r\n  updateDescriptionActionCreator,\r\n  updateDataActionCreator,\r\n} from \"../../redux/addTasksReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasksPage.tasks,\r\n    newTaskText: state.tasksPage.newTaskText,\r\n    newDescriptionText: state.tasksPage.newDescriptionText,\r\n    newDate: state.tasksPage.newDate,\r\n    isAuth: state.loginPage.isAuth,\r\n    newUser: state.loginPage.userName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewTask: (text) => {\r\n      dispatch(updateTaskActionCreator(text));\r\n    },\r\n    updateDescription: (text) => {\r\n      dispatch(updateDescriptionActionCreator(text));\r\n    },\r\n    updateData: (text) => {\r\n      dispatch(updateDataActionCreator(text));\r\n    },\r\n    addTask: () => {\r\n      dispatch(addTaskActionCreator());\r\n    },\r\n  };\r\n};\r\n\r\nlet AddTaskContainer = connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n\r\nexport default AddTaskContainer;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nconst Task = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => text,\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      name: props.task,\r\n      description: props.description,\r\n      date: props.date,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Task from \"../AddTask/Task\";\r\nimport s from \"./tasks.module.css\";\r\nimport { PageHeader, Button } from \"antd\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Tasks = (props) => {\r\n  const tasksElement = props.state.tasksPage.tasks.map((el, indx) => (\r\n    <Task\r\n      key={indx}\r\n      task={el.task}\r\n      description={el.description}\r\n      date={el.date}\r\n    />\r\n  ));\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/\"} />;\r\n\r\n  const isSignOut = () => {\r\n    props.signOut();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader className={s.sitePageHeader} title=\"Tasks\" />\r\n\r\n      <div>{tasksElement}</div>\r\n      <div>\r\n        <Link to={\"/addtask\"}>\r\n          <Button type=\"primary\"> Add Task </Button>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link to={\"/\"}>\r\n          <Button\r\n            className={s.buttonSingOut}\r\n            type=\"primary\"\r\n            onClick={isSignOut}\r\n          >\r\n            Sign Out\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import Tasks from \"./Tasks\";\r\nimport { connect } from \"react-redux\";\r\nimport {addSignOutActionCreator} from '../../redux/loginReducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.loginPage.isAuth,\r\n    currentUser:state.loginPage.userName,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(addSignOutActionCreator());\r\n    },\r\n  };\r\n};\r\n\r\nconst TasksContainer = connect(mapStateToProps,mapDispatchToProps)(Tasks);\r\nexport default TasksContainer;\r\n","import {BrowserRouter,Route} from 'react-router-dom';\nimport LoginContainer from './components/Autorization/AutorizationContainer';\nimport AddTaskContainer from './components/AddTask/AddTaskConatiner';\nimport TasksContainer from './components/Tasks/TasksContainer';\nimport {store} from './redux/store';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Route exact path=\"/\" render={()=> <LoginContainer />} />\n    <Route path=\"/tasks\" render={() => <TasksContainer state={store.getState()}/>} />\n    <Route path=\"/addtask\" render={() => <AddTaskContainer />} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport {store} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {persistor} from './redux/store';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}