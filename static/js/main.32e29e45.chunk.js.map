{"version":3,"sources":["components/Tasks/tasks.module.css","components/AddTask/addTask.module.css","redux/addTasksReducer.js","redux/loginReducer.js","redux/store.js","components/Autorization/Autorization.js","components/Autorization/AutorizationContainer.js","components/services/logIn.js","components/AddTask/AddTask.jsx","components/AddTask/AddTaskConatiner.js","components/AddTask/Task.jsx","components/Tasks/Tasks.jsx","components/Tasks/TasksContainer.jsx","App.js","index.js"],"names":["module","exports","ADD_TASK_TYPE","UPDATE_TASK_TYPE","UPDATE_DESCRIPTION_TYPE","UPDATE_DATE_TYPE","initialState","Admin","id","task","User","newTaskText","newDescriptionText","newDate","addTaskReducer","state","action","type","copy","Object","assign","key","payload","push","uuidv4","description","date","value","ADD_USER_TYPE","UPDATE_USERNAME_TYPE","UPDATE_USERPASSWORD_TYPE","SIGN_OUT","addUserPasswordActionCreator","text","updateUserNameActionCreator","loginReducer","newUserName","userName","newPassword","isAuth","password","reducers","combineReducers","tasksPage","loginPage","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","Autorization","props","to","name","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","rules","required","message","onChange","e","target","updateUserName","updatePassword","offset","onClick","login","LoginContainer","connect","currentUser","newUser","dispatch","result","logIn","alert","AddTask","console","log","className","s","pageAddTaskHeader","title","onBack","window","history","back","updateNewTask","updateDescription","data","datestring","updateData","htmlType","addTask","AddTaskContainer","tasks","updateTaskActionCreator","updateDescriptionActionCreator","updateDataActionCreator","addTaskActionCreator","Task","columns","dataIndex","render","dataSource","Tasks","user","tasksElement","map","el","indx","sitePageHeader","buttonSingOut","signOut","TasksContainer","App","exact","path","getState","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.32e29e45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sitePageHeader\":\"tasks_sitePageHeader__3DP3i\",\"buttonSingOut\":\"tasks_buttonSingOut__2Vl_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageAddTaskHeader\":\"addTask_pageAddTaskHeader__3TjxY\"};","import { v4 as uuidv4 } from \"uuid\";\r\nconst ADD_TASK_TYPE = \"ADD_TASK_TYPE\";\r\nconst UPDATE_TASK_TYPE = \"UPDATE_TASK_TYPE\";\r\nconst UPDATE_DESCRIPTION_TYPE = \"UPDATE_DESCRIPTION_TYPE\";\r\nconst UPDATE_DATE_TYPE = \"UPDATE_DATA_TYPE\";\r\n\r\nconst initialState = {\r\n  Admin: [{ id: 1, task: \"Задача Админа\" }],\r\n  User: [{ id: 2, task: \"Задача Юзера\" }],\r\n  newTaskText: \"Задача\",\r\n  newDescriptionText: \"Описание\",\r\n  newDate: \"Дата\",\r\n};\r\n\r\nexport const updateTaskActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_TASK_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const addTaskActionCreator = (userName) => {\r\n  return {\r\n    type: ADD_TASK_TYPE,\r\n    payload: userName,\r\n  };\r\n};\r\n\r\nexport const updateDescriptionActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_DESCRIPTION_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const updateDataActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_DATE_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nconst addTaskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK_TYPE:\r\n      let copy = Object.assign({}, state);\r\n      for (let key in copy) {\r\n        if (key === action.payload) {\r\n          copy[key].push({\r\n            id: uuidv4(),\r\n            task: state.newTaskText,\r\n            description: state.newDescriptionText,\r\n            date: state.newDate,\r\n          });\r\n        }\r\n      }\r\n      return copy;\r\n\r\n    case UPDATE_TASK_TYPE:\r\n      return {\r\n        ...state,\r\n        newTaskText: action.value,\r\n      };\r\n    case UPDATE_DESCRIPTION_TYPE:\r\n      return {\r\n        ...state,\r\n        newDescriptionText: action.value,\r\n      };\r\n    case UPDATE_DATE_TYPE:\r\n      return {\r\n        ...state,\r\n        newDate: action.value,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addTaskReducer;\r\n","import { logIn } from \"../components/services/logIn\";\r\nconst ADD_USER_TYPE = \"ADD_USER_TYPE\";\r\nconst UPDATE_USERNAME_TYPE = \"UPDATE_USERNAME_TYPE\";\r\nconst UPDATE_USERPASSWORD_TYPE = \"UPDATE_USERPASSWORD_TYPE\";\r\nconst SIGN_OUT = \"SIGN_OUT\";\r\nexport const addUserActionCreator = () => {\r\n  return {\r\n    type: ADD_USER_TYPE,\r\n  };\r\n};\r\n\r\nexport const addSignOutActionCreator = () => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const addUserPasswordActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_USERPASSWORD_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nexport const updateUserNameActionCreator = (text) => {\r\n  return {\r\n    type: UPDATE_USERNAME_TYPE,\r\n    value: text,\r\n  };\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_USERNAME_TYPE:\r\n      return {\r\n        ...state,\r\n        newUserName: action.value,\r\n        userName: action.value,\r\n      };\r\n    case UPDATE_USERPASSWORD_TYPE:\r\n      return {\r\n        ...state,\r\n        newPassword: action.value,\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        userName: \"\",\r\n        password: \"\",\r\n        newPassword: \"\",\r\n        newUserName: \"\",\r\n      };\r\n\r\n    case ADD_USER_TYPE:\r\n      return {\r\n        ...state,\r\n        userName: state.newUserName,\r\n        isAuth: true,\r\n        newPassword: \"\",\r\n        newUserName: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n\r\nexport const login = (name, password) => (dispatch) => {\r\n  const result = logIn(name, password);\r\n  if (result === \"succes\") {\r\n    dispatch(addUserActionCreator());\r\n  } else {\r\n    alert('попробуйте еще раз')\r\n  }\r\n};\r\n\r\nexport const updateUserName = (text) => (dispatch) => {\r\n  dispatch(updateUserNameActionCreator(text));\r\n};\r\n\r\nexport const updatePassword = (text) => (dispatch) => {\r\n  dispatch(addUserPasswordActionCreator(text));\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport addTaskReducer from \"./addTasksReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport loginReducer from \"./loginReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nlet reducers = combineReducers({\r\n  tasksPage: addTaskReducer,\r\n  loginPage: loginReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport let store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport let persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst Autorization = (props) => {\r\n  const changeUserNameValue = (e) => {\r\n    const text = e.target.value;\r\n    props.updateUserName(text);\r\n  };\r\n\r\n  const changeUserPasswordValue = (e) => {\r\n    const text = e.target.value;\r\n    props.updatePassword(text);\r\n  };\r\n  const addUserNameAndPassword = () => {\r\n    props.login(\r\n      props.state.loginPage.newUserName,\r\n      props.state.loginPage.newPassword\r\n    );\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to={\"/tasks\"} />;\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 6,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={props.userName} onChange={changeUserNameValue} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={props.password} onChange={changeUserPasswordValue} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" onClick={addUserNameAndPassword}>\r\n            Sign In\r\n          </Button>\r\n          {/* </Link> */}\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autorization;\r\n","import {\r\n  updateUserNameActionCreator,\r\n  addUserPasswordActionCreator,\r\n  login,\r\n  updatePassword,\r\n  updateUserName\r\n} from \"../../redux/loginReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Autorization from \"./Autorization\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.newUserName,\r\n    isAuth: state.loginPage.isAuth,\r\n    password: state.newPassword,\r\n    currentUser: state.newUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserName: (text) => {\r\n      dispatch(updateUserNameActionCreator(text));\r\n    },\r\n\r\n    // login: () =>   (dispatch) => {\r\n    //   // const result = await logIn(userName, password);\r\n\r\n    //   // if (result) {\r\n    //   //   dispatch(addUserActionCreator());\r\n    //   // } else {\r\n    //   //   return alert(\"ошибка\");\r\n    //   // }\r\n    //   setTimeout(()=>console.log('dsfsd'),2000)\r\n    // },\r\n    updatePassword: (text) => {\r\n      dispatch(addUserPasswordActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nlet LoginContainer = connect(mapStateToProps, {updateUserName,updatePassword,login})(Autorization);\r\n\r\nexport default LoginContainer;\r\n","export const logIn =  (userName, password) => { \r\n  debugger;\r\n  if ((userName === 'Admin' && password === '12345')||(userName === 'User' && password === 'qwerty')) {\r\n    return \"succes\";\r\n  }\r\n};\r\n\r\n\r\n// export const logIn = async (username, password) => (\r\n//   new Promise((resolve, reject) => {\r\n//     if ((username === 'Admin' && password === '12345')||(username === 'User' && password === 'qwerty')) {\r\n//       resolve('succes');\r\n//     } else {\r\n//       reject(new Error('Incorrect username or password.'));\r\n//     }\r\n//   })\r\n// );","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { PageHeader, Form, Input, Button, DatePicker } from \"antd\";\r\nimport s from \"./addTask.module.css\";\r\n\r\nconst AddTask = (props) => {\r\n  const inTask = () => {\r\n    props.addTask(props.newUser);\r\n  };\r\n  console.log(props.newUser);\r\n  const changeTask = (e) => {\r\n    const text = e.target.value;\r\n    props.updateNewTask(text);\r\n  };\r\n\r\n  const changeDescription = (e) => {\r\n    const text = e.target.value;\r\n    props.updateDescription(text);\r\n  };\r\n\r\n  const changeData = (data, datestring) => {\r\n    props.updateData(datestring);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div>\r\n      <div className={s.pageAddTaskHeader}>\r\n        <PageHeader\r\n          title=\"Add Task\"\r\n          onBack={() => window.history.back()}\r\n        ></PageHeader>\r\n      </div>\r\n\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 10,\r\n        }}\r\n        wrapperCol={{\r\n          span: 6,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Task\"\r\n          name=\"task\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your nameTask!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            value={props.newTaskText}\r\n            required\r\n            onChange={changeTask}\r\n          ></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your description!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            value={props.newDescriptionText}\r\n            onChange={changeDescription}\r\n          ></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Date\"\r\n          name=\"date\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your date!\",\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker value={props.newDate} onChange={changeData}></DatePicker>\r\n        </Form.Item>\r\n\r\n        <div>\r\n          <Link to=\"/tasks\">\r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 10,\r\n                span: 10,\r\n              }}\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={inTask}>\r\n                Add\r\n              </Button>\r\n            </Form.Item>\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { connect } from \"react-redux\";\r\nimport AddTask from \"./AddTask\";\r\nimport {\r\n  updateTaskActionCreator,\r\n  addTaskActionCreator,\r\n  updateDescriptionActionCreator,\r\n  updateDataActionCreator,\r\n} from \"../../redux/addTasksReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasksPage.tasks,\r\n    newTaskText: state.tasksPage.newTaskText,\r\n    newDescriptionText: state.tasksPage.newDescriptionText,\r\n    newDate: state.tasksPage.newDate,\r\n    isAuth: state.loginPage.isAuth,\r\n    newUser: state.loginPage.userName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewTask: (text) => {\r\n      dispatch(updateTaskActionCreator(text));\r\n    },\r\n    updateDescription: (text) => {\r\n      dispatch(updateDescriptionActionCreator(text));\r\n    },\r\n    updateData: (text) => {\r\n      dispatch(updateDataActionCreator(text));\r\n    },\r\n    addTask: (userName) => {\r\n      dispatch(addTaskActionCreator(userName));\r\n    },\r\n  };\r\n};\r\n\r\nlet AddTaskContainer = connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n\r\nexport default AddTaskContainer;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nconst Task = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => text,\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      name: props.task,\r\n      description: props.description,\r\n      date: props.date,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Task from \"../AddTask/Task\";\r\nimport s from \"./tasks.module.css\";\r\nimport { PageHeader, Button } from \"antd\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Tasks = (props) => {\r\n  const user = props.currentUser;\r\n  const tasksElement = props.state.tasksPage[user].map((el, indx) => (\r\n    <Task\r\n      key={indx}\r\n      task={el.task}\r\n      description={el.description}\r\n      date={el.date}\r\n    />\r\n  ));\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/\"} />;\r\n\r\n  const isSignOut = () => {\r\n    props.signOut();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader className={s.sitePageHeader} title=\"Tasks\" />\r\n\r\n      <div>{tasksElement}</div>\r\n      <div>\r\n        <Link to={\"/addtask\"}>\r\n          <Button type=\"primary\"> Add Task </Button>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link to={\"/\"}>\r\n          <Button\r\n            className={s.buttonSingOut}\r\n            type=\"primary\"\r\n            onClick={isSignOut}\r\n          >\r\n            Sign Out\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import Tasks from \"./Tasks\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSignOutActionCreator } from \"../../redux/loginReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.loginPage.isAuth,\r\n    currentUser: state.loginPage.userName,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(addSignOutActionCreator());\r\n    },\r\n  };\r\n};\r\n\r\nconst TasksContainer = connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\nexport default TasksContainer;\r\n","import {HashRouter,Route} from 'react-router-dom';\nimport LoginContainer from './components/Autorization/AutorizationContainer';\nimport AddTaskContainer from './components/AddTask/AddTaskConatiner';\nimport TasksContainer from './components/Tasks/TasksContainer';\nimport {store} from './redux/store';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Route exact path=\"/\" render={()=> <LoginContainer state={store.getState()}/>} />\n    <Route path=\"/tasks\" render={() => <TasksContainer state={store.getState()}/>} />\n    <Route path=\"/addtask\" render={() => <AddTaskContainer />} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport {store} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {persistor} from './redux/store';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  \n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>,\n  \n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}